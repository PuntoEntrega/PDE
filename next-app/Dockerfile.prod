# Dockerfile.prod
FROM node:20-alpine AS builder
WORKDIR /app

COPY package*.json ./
RUN npm install --legacy-peer-deps

COPY . .
COPY prisma ./prisma
RUN npx prisma generate
RUN npm run build

# Producci√≥n: servidor de Next.js
FROM node:20-alpine
WORKDIR /app

COPY --from=builder /app .

ENV NODE_ENV=production
EXPOSE 3000

CMD ["npm", "run", "start"]

ARG DATABASE_URL
ARG JWT_SECRET
ARG SALT_ROUNDS
ARG DEFAULT_ROLE_ID
ARG MANDRILL_API_KEY
ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_REGION
ARG AWS_S3_BUCKET
ARG SMS_SERVICE_AUTH_URL
ARG SMS_SERVICE_CLIENT_ID
ARG SMS_SERVICE_USERNAME
ARG SMS_SERVICE_PASSWORD
ARG SMS_SERVICE_SCOPE
ARG SMS_SERVICE_SEND_URL
ARG OPERADOR_PDE
ARG ADMIN_PDE
ARG ADMINISTRADOR_EMPRESA
ARG SUPER_ADMIN_EMPRESA
ARG SOPORTE_APLICATIVO
ARG SUPER_ADMIN_APLICATIVO
ARG OWNER_APLICATIVO

ENV DATABASE_URL=$DATABASE_URL
ENV JWT_SECRET=$JWT_SECRET
ENV SALT_ROUNDS=$SALT_ROUNDS
ENV DEFAULT_ROLE_ID=$DEFAULT_ROLE_ID
ENV MANDRILL_API_KEY=$MANDRILL_API_KEY
ENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
ENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
ENV AWS_REGION=$AWS_REGION
ENV AWS_S3_BUCKET=$AWS_S3_BUCKET
ENV SMS_SERVICE_AUTH_URL=$SMS_SERVICE_AUTH_URL
ENV SMS_SERVICE_CLIENT_ID=$SMS_SERVICE_CLIENT_ID
ENV SMS_SERVICE_USERNAME=$SMS_SERVICE_USERNAME
ENV SMS_SERVICE_PASSWORD=$SMS_SERVICE_PASSWORD
ENV SMS_SERVICE_SCOPE=$SMS_SERVICE_SCOPE
ENV SMS_SERVICE_SEND_URL=$SMS_SERVICE_SEND_URL
ENV OPERADOR_PDE=$OPERADOR_PDE
ENV ADMIN_PDE=$ADMIN_PDE
ENV ADMINISTRADOR_EMPRESA=$ADMINISTRADOR_EMPRESA
ENV SUPER_ADMIN_EMPRESA=$SUPER_ADMIN_EMPRESA
ENV SOPORTE_APLICATIVO=$SOPORTE_APLICATIVO
ENV SUPER_ADMIN_APLICATIVO=$SUPER_ADMIN_APLICATIVO
ENV OWNER_APLICATIVO=$OWNER_APLICATIVO
